<Controls:MetroWindow x:Class="AudioSchedulerOver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:local="clr-namespace:AudioSchedulerOver"
        xmlns:viewModel="clr-namespace:AudioSchedulerOver.ViewModel"
        xmlns:enum="clr-namespace:AudioSchedulerOver.Enum"
        xmlns:model="clr-namespace:AudioSchedulerOver.Model"
        xmlns:converter="clr-namespace:AudioSchedulerOver.Converters"          
        mc:Ignorable="d"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Title="Audio Scheduler | 0.3.9" Height="450" Width="1200">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnAppCloseCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Controls:MetroWindow.Resources>
        <ObjectDataProvider x:Key="intervalEnum" MethodName="GetValues" ObjectType="{x:Type enum:IntervalEnum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:IntervalEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dayEnum" MethodName="GetValues" ObjectType="{x:Type enum:DayEnum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enum:DayEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <converter:BoolToVisibleOrCollapsed x:Key="BoolToVisibleOrCollapsed" />
        <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    </Controls:MetroWindow.Resources>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="265" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="275" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <GroupBox Header="Audios" Grid.Row="0" Grid.Column="0">
            <ListView AllowDrop="True"
                  ItemsSource="{Binding Audios}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <cmd:EventToCommand Command="{Binding DropAudioCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:Audio}">
                        <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:MetroWindow}}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Column="0" Grid.Row="0">
                                <TextBlock Text="{Binding Name}" Height="25" FontSize="18" FontWeight="SemiBold" ToolTip="{Binding Name}" TextTrimming="WordEllipsis" VerticalAlignment="Top" />
                                <TextBlock Text="{Binding FilePath}" Height="25" FontSize="12" FontWeight="Light" ToolTip="{Binding FilePath}" TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom" TextWrapping="NoWrap" />
                            </StackPanel>
                            <Button Grid.Column="1" Grid.Row="0" Content="Play" CommandParameter="{Binding}" Command="{Binding DataContext.PeviewAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" />
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Play" CommandParameter="{Binding}" Command="{Binding PlacementTarget.Tag.DataContext.PeviewAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                    <MenuItem Header="Add" CommandParameter="{Binding}" Command="{Binding PlacementTarget.Tag.DataContext.AddAudioToScheduleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                    <MenuItem Header="Remove" CommandParameter="{Binding}" Command="{Binding PlacementTarget.Tag.DataContext.RemoveAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </GroupBox>

        <GroupBox Margin="3 0 0 0" Header="Schedule" Grid.Row="0" Grid.Column="1">
            <ListView  ItemsSource="{Binding ScheduleViewModels}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0 5" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:MetroWindow}}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="50" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Column="0" Grid.Row="0">
                                <TextBlock Text="{Binding Audio.Name}" Height="25" FontSize="18" FontWeight="SemiBold" ToolTip="{Binding Audio.Name}" TextTrimming="WordEllipsis" VerticalAlignment="Top" />
                                <TextBlock Text="{Binding Audio.FilePath}" Height="15" FontSize="12" FontWeight="Light" ToolTip="{Binding Audio.FilePath}" TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom" TextWrapping="NoWrap" />
                                <Label Foreground="Green" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Top">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsActive, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="True">
                                                    <Setter Property="Content" Value="active"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsActive, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="False">
                                                    <Setter Property="Content" Value="stopped"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </StackPanel>
                            <StackPanel Margin="10 0 0 0" Grid.Column="1" Grid.Row="0">
                                <WrapPanel Height="30" Orientation="Horizontal" VerticalAlignment="Top">
                                    <TextBlock Text="Start in" VerticalAlignment="Center" />
                                    <ComboBox ItemsSource="{Binding Source={StaticResource dayEnum}}" Margin="5 0" Width="125" SelectedItem="{Binding DayEnum, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                    <TextBlock Text=" at " VerticalAlignment="Center" />
                                    <Controls:TimePicker SelectedTime="{Binding StartDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="5 0" VerticalAlignment="Center" Width="125" />
                                </WrapPanel>
                                <WrapPanel Height="30" Orientation="Horizontal" VerticalAlignment="Bottom" >
                                    <TextBlock Margin="0 0 5 0" Text="repeat every" VerticalAlignment="Center" />
                                    <TextBox Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="5 0" Width="30"/>
                                    <ComboBox ItemsSource="{Binding Source={StaticResource intervalEnum}}" Margin="5 0" Width="103" SelectedItem="{Binding IntervalEnum, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </WrapPanel>
                            </StackPanel>
                            <Button Grid.Column="2" Grid.Row="0" Content="Start" Visibility="{Binding IsActive, Converter={StaticResource InverseBoolToVisibilityConverter}}" CommandParameter="{Binding}" Command="{Binding DataContext.StartScheduledPlaybackCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" />
                            <Button Grid.Column="2" Grid.Row="0" Content="Stop" Visibility="{Binding IsActive, Converter={StaticResource BoolToVisibleOrCollapsed}}" CommandParameter="{Binding}" Command="{Binding DataContext.StopScheduledPlaybackCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" />
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Save" CommandParameter="{Binding}" Command="{Binding PlacementTarget.Tag.DataContext.SaveScheduleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                    <MenuItem Header="Remove" CommandParameter="{Binding}" Command="{Binding PlacementTarget.Tag.DataContext.RemoveScheduleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                    <MenuItem Header="Play" CommandParameter="{Binding}" Command="{Binding PlacementTarget.Tag.DataContext.PlayScheduleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </GroupBox>

        <GroupBox Margin="3 0 0 0" Header="Music Player Configs" Grid.Row="0" Grid.Column="2">
            <StackPanel>
                <TextBlock Text="Target Music Player Name" />
                <TextBox Text="{Binding AppName, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Text="{Binding SuccessMessage}" TextAlignment="Center" TextWrapping="Wrap" Foreground="Green"  HorizontalAlignment="Center" />
                <TextBlock Text="{Binding ErrorMessage}" TextAlignment="Center" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" />

                <TextBlock Text="Master Volume" Margin="0 10 0 0" />
                <WrapPanel>
                    <Slider Width="205" Minimum="0" Maximum="100"  Value="{Binding TargetVolunme, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBox VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="15 0 0 0" Width="30" Text="{Binding TargetVolunme, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </WrapPanel>
                <Button Content="Connect" Margin="15" Command="{Binding ConnectToAppCommnd}"/>
                <Button Visibility="Hidden" VerticalAlignment="Bottom" Content="Save app name and volume" Margin="15" Command="{Binding SaveCommandCommnd}"/>
            </StackPanel>
        </GroupBox>
    </Grid>
</Controls:MetroWindow>
